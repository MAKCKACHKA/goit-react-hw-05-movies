{"version":3,"file":"static/js/220.da78c979.chunk.js","mappings":"sKAAO,IAAMA,EAAU,SAAAC,GASrB,OAAOC,MAAMD,EARG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGqBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACzC,C,qICLYC,EAAU,WAAO,IAAD,IACnBC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAY,qBADDC,EAAAA,EAAAA,MAENC,aADO,aAChB,EAAgBC,YADA,QACQ,kCAE1B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,GAAQ,sCAAD,OAAuCW,EAAvC,oBACJJ,MAAK,SAAAc,GACJF,EAAUE,EACX,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACZ,KAEF,iCACE,SAAC,KAAD,CAAMe,UAAWC,EAAAA,EAAAA,KAAUC,GAAIf,EAA/B,kBAGmB,IAAlBK,EAAOW,SAAgB,cAAGH,UAAWC,EAAAA,EAAAA,SAAd,+BACL,IAAlBT,EAAOW,SACN,4BACE,iBAAKH,UAAWC,EAAAA,EAAAA,aAAhB,UACGT,EAAOY,aACN,gBACEC,IAAG,0CAAqCb,EAAOY,aAC/CE,IAAKd,EAAOe,eACZP,UAAWC,EAAAA,EAAAA,gBAGb,gBACEI,IAAI,iGACJC,IAAKd,EAAOe,eACZP,UAAWC,EAAAA,EAAAA,gBAGf,iBAAKD,UAAWC,EAAAA,EAAAA,iBAAhB,WACE,eAAGD,UAAWC,EAAAA,EAAAA,aAAd,WACE,mCADF,IACkBT,EAAOe,mBAEzB,eAAGP,UAAWC,EAAAA,EAAAA,aAAd,WACE,0CADF,IACyBT,EAAOgB,iBAEhC,eAAGR,UAAWC,EAAAA,EAAAA,aAAd,WACE,qCADF,IACoBT,EAAOiB,aAE3B,gBAAIT,WAAYC,EAAAA,EAAAA,aAAkBA,EAAAA,EAAAA,QAAlC,WACE,oCACCT,EAAOkB,QACNlB,EAAOkB,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAM3B,GADM,QAI3B,eAAGe,UAAWC,EAAAA,EAAAA,aAAd,WACE,uCADF,IACsBT,EAAOsB,uBAKjC,gBAAId,UAAWC,EAAAA,EAAAA,SAAf,WACE,yBACE,SAAC,KAAD,CACEC,GAAG,UACHF,UAAWC,EAAAA,EAAAA,KACXZ,MAAO,CAAEC,KAAMH,GAHjB,qBAQF,yBACE,SAAC,KAAD,CACEe,GAAG,UACHF,UAAWC,EAAAA,EAAAA,KACXZ,MAAO,CAAEC,KAAMH,GAHjB,2BASJ,SAAC,EAAA4B,SAAD,CACEC,UAAU,gBAAKhB,UAAWC,EAAAA,EAAAA,SAAhB,gCADZ,UAGE,SAAC,KAAD,WAMX,EACD,W","sources":["FetchApi.js","pages/Moviedetails.jsx"],"sourcesContent":["export const getData = api => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTJlYjhmY2Y4MjgxZDk2MzUxZDM3NzkwYjY4NDliMyIsInN1YiI6IjY0ZTY1MWI1MDZmOTg0MDBjYTU0M2IxYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Jl0g1qZXpWsls6NI2whWYvOEA3R_4Z8tBb5aQwqzmWs',\n    },\n  };\n  return fetch(api, options).then(response => response.json());\n};\n","import { getData } from 'FetchApi';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport css from 'styles.module.css';\n\nexport const Details = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref =\n    location.state?.from ?? '/goit-react-hw-05-movies/movies';\n\n  const [selMov, setSelMov] = useState([]);\n  useEffect(() => {\n    getData(`https://api.themoviedb.org/3/movie/${id}?language=en-US`)\n      .then(data => {\n        setSelMov(data);\n      })\n      .catch(err => console.error(err));\n  }, [id]);\n  return (\n    <>\n      <Link className={css.Back} to={backLinkHref}>\n        Back\n      </Link>\n      {selMov.length === 0 && <p className={css.NotFound}>Reviews not found</p>}\n      {selMov.length !== 0 && (\n        <div>\n          <div className={css.MovieWrapper}>\n            {selMov.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${selMov.poster_path}`}\n                alt={selMov.original_title}\n                className={css.MoviePoster2}\n              />\n            ) : (\n              <img\n                src=\"https://th.bing.com/th/id/R.3e77a1db6bb25f0feb27c95e05a7bc57?rik=07AQ3YRhkD3z8A&pid=ImgRaw&r=0\"\n                alt={selMov.original_title}\n                className={css.MoviePoster2}\n              />\n            )}\n            <div className={css.MovieInformation}>\n              <p className={css.MovieInfItem}>\n                <b>Title: </b> {selMov.original_title}\n              </p>\n              <p className={css.MovieInfItem}>\n                <b>Release date: </b> {selMov.release_date}\n              </p>\n              <p className={css.MovieInfItem}>\n                <b>Overview:</b> {selMov.overview}\n              </p>\n              <ul className={(css.MovieInfItem, css.Genres)}>\n                <b>Genres: </b>\n                {selMov.genres &&\n                  selMov.genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n              </ul>\n              <p className={css.MovieInfItem}>\n                <b>User score:</b> {selMov.vote_average}\n              </p>\n            </div>\n          </div>\n\n          <ul className={css.LinkList}>\n            <li>\n              <Link\n                to=\"credits\"\n                className={css.Link}\n                state={{ from: backLinkHref }}\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"reviews\"\n                className={css.Link}\n                state={{ from: backLinkHref }}\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense\n            fallback={<div className={css.NotFound}>Loading subpage...</div>}\n          >\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Details;\n"],"names":["getData","api","fetch","method","headers","accept","Authorization","then","response","json","Details","id","useParams","backLinkHref","useLocation","state","from","useState","selMov","setSelMov","useEffect","data","catch","err","console","error","className","css","to","length","poster_path","src","alt","original_title","release_date","overview","genres","map","genre","name","vote_average","Suspense","fallback"],"sourceRoot":""}