{"version":3,"file":"static/js/369.43c0255b.chunk.js","mappings":"sKAAO,IAAMA,EAAU,SAAAC,GASrB,OAAOC,MAAMD,EARG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGqBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACzC,C,+FC+GD,UApHoB,WAAO,IAAD,EACxB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAyBN,EAAAA,EAAAA,UAAS,IAAlC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BX,EAAAA,EAAAA,WAAS,GAArC,eAAOY,EAAP,KAAeC,EAAf,KAEMC,EAAU,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAoBhDC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,GAAQ,mDAAD,OAC8CwB,EAD9C,oDACoGb,IAExGJ,MAAK,SAAAoB,GACJT,EAAOS,EAAKC,SACZZ,GAAa,EACd,IACAa,OAAM,SAAAC,GACLC,QAAQC,MAAMF,GACdd,GAAa,EACd,GACJ,GAAE,CAACQ,EAAYb,IAEhB,IAWMsB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,gBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,UACE,kBAAMC,KAAK,SAASF,UAAWC,EAAAA,EAAAA,WAAgBE,SAhBhC,SAAAC,GAhCK,IAAAC,EAiCxBD,EAAEE,iBACF3B,EAAS,IAvBTF,EAAQ,IAyBO,KAAVC,GAAgBI,EAAOyB,OAAS,GAAMzB,IAAW,KACpDD,GAAa,GAnCfK,EAD6B,MADLmB,EAuCN3B,GAtCgB,CAAE2B,MAAAA,GAAU,CAAC,GAuC/CjB,GAAU,EACX,EAOK,WACE,mBAAQY,UAAWC,EAAAA,EAAAA,iBAAsBO,KAAK,SAA9C,UACE,iBAAMR,UAAWC,EAAAA,EAAAA,sBAAjB,uBAGF,kBACED,UAAWC,EAAAA,EAAAA,gBACXO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAtDW,SAAAR,GACnB,IAAMS,EAAWT,EAAEU,OAAOpC,MAC1BC,EAASkC,EACV,EAoDSnC,MAAOA,SAIZE,GACC,cAAGoB,UAAWC,EAAAA,EAAAA,SAAd,6BAEA,yBACGd,GAAUL,EAAOyB,OAAS,GACzB,cAAGP,UAAWC,EAAAA,EAAAA,SAAd,wBAEA,iBAAKD,UAAWC,EAAAA,EAAAA,iBAAhB,WACE,eAAID,UAAWC,EAAAA,EAAAA,UAAf,SACGnB,EAAOiC,KAAI,SAAAC,GAAK,OACf,eAAmBhB,UAAWC,EAAAA,EAAAA,UAA9B,UACE,UAAC,KAAD,CAAMgB,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,UACGkB,EAAMK,aACL,gBACEC,IAAG,0CAAqCN,EAAMK,aAC9CE,IAAKP,EAAMQ,eACXxB,UAAWC,EAAAA,EAAAA,eAGb,gBACEqB,IAAI,iGACJC,IAAKP,EAAMQ,eACXxB,UAAWC,EAAAA,EAAAA,eAGf,cAAGD,UAAWC,EAAAA,EAAAA,WAAd,SAA+Be,EAAMX,YAfhCW,EAAME,GADA,MAqBA,IAAlBpC,EAAOyB,SACN,mBAAQP,UAAWC,EAAAA,EAAAA,OAAYO,KAAK,SAASiB,QAjF1C,WACfhD,EAAQD,EAAO,EAChB,EA+Ea,8BAUf,C","sources":["FetchApi.js","pages/Searchmovies.jsx"],"sourcesContent":["export const getData = api => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZTJlYjhmY2Y4MjgxZDk2MzUxZDM3NzkwYjY4NDliMyIsInN1YiI6IjY0ZTY1MWI1MDZmOTg0MDBjYTU0M2IxYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Jl0g1qZXpWsls6NI2whWYvOEA3R_4Z8tBb5aQwqzmWs',\n    },\n  };\n  return fetch(api, options).then(response => response.json());\n};\n","import { getData } from 'FetchApi';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from 'styles.module.css';\n\nconst SearchMovie = () => {\n  const [page, setPage] = useState(1);\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMov] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [submit, setSubmit] = useState(false);\n\n  const movieTitle = searchParams.get('title') ?? '';\n\n  const updateQueryString = title => {\n    const nextParams = title !== '' ? { title } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleChange = e => {\n    const newValue = e.target.value;\n    setValue(newValue);\n  };\n\n  const resetPage = () => {\n    setPage(1);\n  };\n\n  const plusPage = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    getData(\n      `https://api.themoviedb.org/3/search/movie?query=${movieTitle}&include_adult=false&language=en-US&page=${page}`\n    )\n      .then(data => {\n        setMov(data.results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.error(err);\n        setIsLoading(false);\n      });\n  }, [movieTitle, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValue('');\n    resetPage();\n    if ((value !== '' && movies.length < 1) || movies === []) {\n      setIsLoading(true);\n    }\n    updateQueryString(value);\n    setSubmit(true);\n  };\n\n  const location = useLocation();\n\n  return (\n    <>\n      <div className={css.Searchbar}>\n        <form role=\"search\" className={css.SearchForm} onSubmit={handleSubmit}>\n          <button className={css.SearchFormButton} type=\"submit\">\n            <span className={css.SearchFormButtonLabel}>&#9740;</span>\n          </button>\n\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            onChange={handleChange}\n            value={value}\n          />\n        </form>\n      </div>\n      {isLoading ? (\n        <p className={css.NotFound}> isLoading... </p>\n      ) : (\n        <div>\n          {submit && movies.length < 1 ? (\n            <p className={css.NotFound}>Not Found</p>\n          ) : (\n            <div className={css.MovieListWrapper}>\n              <ul className={css.MovieList}>\n                {movies.map(movie => (\n                  <li key={movie.id} className={css.MovieItem}>\n                    <Link to={`${movie.id}`} state={{ from: location }}>\n                      {movie.poster_path ? (\n                        <img\n                          src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                          alt={movie.original_title}\n                          className={css.MoviePoster}\n                        />\n                      ) : (\n                        <img\n                          src=\"https://th.bing.com/th/id/R.3e77a1db6bb25f0feb27c95e05a7bc57?rik=07AQ3YRhkD3z8A&pid=ImgRaw&r=0\"\n                          alt={movie.original_title}\n                          className={css.MoviePoster}\n                        />\n                      )}\n                      <p className={css.MovieTitle}>{movie.title}</p>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {movies.length !== 0 && (\n                <button className={css.Button} type=\"button\" onClick={plusPage}>\n                  Next page\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport default SearchMovie;\n"],"names":["getData","api","fetch","method","headers","accept","Authorization","then","response","json","useState","page","setPage","value","setValue","isLoading","setIsLoading","movies","setMov","useSearchParams","searchParams","setSearchParams","submit","setSubmit","movieTitle","get","useEffect","data","results","catch","err","console","error","location","useLocation","className","css","role","onSubmit","e","title","preventDefault","length","type","autoComplete","autoFocus","placeholder","onChange","newValue","target","map","movie","to","id","state","from","poster_path","src","alt","original_title","onClick"],"sourceRoot":""}